$google-font: 'Open+Sans';
$font-family: $google-font, -apple-system, system-ui, BlinkMacSystemFont, "Segoe UI", Roboto, "Helvetica Neue", sans-serif;

$font-size-base: 1rem; //16px
$font-size-base-md: 1.125rem; //18px
$line-height-base: 2rem / $font-size-base;
$line-height-sm: 1.5rem; //24px
$line-height-md: 2rem; //32px
$line-height-lg: 2.5rem; //40px

$font-weight-light: 300;
$font-weight-normal: 400;
$font-weight-bold: 700;
$font-weight-black: 800;

$color-white: #ffffff;
$color-black: #000000;

$color-primary: #1C79BC;
$color-success: #21d161;
$color-warning: #ff9c05;
$color-error: #f2415d;
$color-blue: #5937e9;
$color-violet: #7d37e9;

$color-body: #0D0E10;
$color-bg: #e5ebf2;
$color-bg-light: #f7faff;
$color-bg-gray: #b1badd;
$color-bg-grey-light: #f0f4ff;
$color-interactive: $color-primary;
$color-primary-inactive: #96bae7;

$color-muted: #7180b8;
$color-muted-light: #acb5c8;
$color-bg-light: #f7faff;
$color-border: #eeeeee;

$theme-colors: (
    primary: $color-primary,
    success: $color-success,
    warning: $color-warning,
    error: $color-error,
    blue: $color-blue,
    dark: $color-body,
    violet: $color-violet,
);

$shadow-box: 0 0 1px 0 rgba(19, 58, 110, 0.08), 4px 8px 24px 0 rgba(30, 50, 77, 0.16);
$shadow-box-hover: 0 0 1px 0 rgba(17, 49, 110, 0.08), 4px 8px 24px 0 rgba(9, 20, 39, 0.24);

// Typo
$h1-font-size: 3rem; //36px
$h1-line-height: 3.75rem; //48px

$h2-font-size: 2.25rem; //28px
$h2-line-height: 3rem; //40px

$h3-font-size: 1.5rem; //24px
$h3-line-height: 2rem; //32px

$h4-font-size: $font-size-base; //16px
$h4-line-height: 2rem; //32px

$h5-font-size: .875rem; //14px
$h5-line-height: 1rem; //16px

$h6-font-size: .75rem; //11px
$h6-line-height: 1rem; //16px

// Borders
$border-radius: .25rem;
$border-radius-circle: 50%;
$border-radius-full: 10rem;

// Shadows
$shadow-box: 0 0 1px 0 rgba(23, 52, 110, 0.08), 4px 8px 24px 0 rgba(31, 46, 77, 0.16);
$shadow-btn: 0 2px 2px 0 rgba(19, 38, 74, .08), 4px 4px 6px 0 rgba(19, 38, 74, .24);
$shadow-btn-rounded: inset 0 1px 3px 0 rgba(0,0,0,0.5), 0 0 0 3px #E6EEFF;
$shadow-btn-hover: 0 2px 2px 0 rgba(19, 38, 74, .08), 4px 6px 10px 0 rgba(16, 39, 85, .32);


$enable-important-utilities:  true !default;

// Spacing
$gap-0: 0; // 0px
$gap-1: .25rem; // 4px
$gap-2: .5rem; // 8px
$gap-3: .75rem; // 12px
$gap-4: 1rem; //16px
$gap-5: 1.25rem; //20px
$gap-6: 1.5rem; //24px
$gap-8: 2rem; //32px
$gap-9: 2.25rem; //36px
$gap-10: 2.5rem; //40px
$gap-12: 3rem; //48px
$gap-14: 3.5rem; //56px
$gap-16: 4rem; //64px
$gap-18: 4.5rem; //72px
$gap-20: 5rem; //80px

$spacers: (
    0: $gap-0,
    1: $gap-1,
    2: $gap-2,
    3: $gap-3,
    4: $gap-4,
    6: $gap-6,
    8: $gap-8,
    10: $gap-10,
    14: $gap-14,
    16: $gap-16,
    18: $gap-18,
    20: $gap-20,
);

$negative-spacers: null;

$container-width: 80rem;

$grid-gutter-width: $gap-8;
$grid-columns: 12;
$grid-row-columns: 6;

$grid-breakpoints: (
    0: 0,
    sm: 640px,
    md: 768px,
    lg: 1024px,
    xl: 1280px,
);

$gutters: $spacers;

//Transitions
$transition-duration: .3s;

$input-btn-height: $gap-12;
$input-btn-line-height: $gap-5;
$input-btn-padding-y: $gap-2;
$input-btn-padding-x: $gap-6;

$input-focus-box-shadow: 0 0 1px 0 rgba(23, 52, 110, .08), 4px 8px 24px 0 rgba(4, 58, 164, .24);
$input-disabled-bg: $color-bg-light;

//Inputs
$input-height: $input-btn-height;
$input-line-height: $input-btn-line-height;
$input-padding-y: $input-btn-padding-y;
$input-padding-x: $input-btn-padding-x;

$btn-height: $input-btn-height;
$btn-line-height: $input-btn-line-height;
$btn-padding-y: $input-btn-padding-y;
$btn-padding-x: $input-btn-padding-x;

$btn-bg: #ffffff;
$btn-shadow: 0 1px 0 0 rgba(0, 25, 64, .16);
$btn-primary-shadow: 0 2px 2px 0 rgba(19, 38, 74, .08), 4px 4px 6px 0 rgba(19, 38, 74, .16);

// Borders
$border-radius: .25rem;

$utilities: (
  "display": (
    responsive: true,
    print: true,
    property: display,
    class: d,
    values: none inline inline-block block flex inline-flex
  ),
  "border": (
    property: border,
    values: (
      null: 1px solid $color-border,
      0: 0,
    )
  ),
  "border-top": (
    property: border-top,
    values: (
      null: 1px solid $color-border,
      0: 0,
    )
  ),
  "border-right": (
    property: border-right,
    values: (
      null: 1px solid $color-border,
      0: 0,
    )
  ),
  "border-bottom": (
    property: border-bottom,
    values: (
      null: 1px solid $color-border,
      0: 0,
    )
  ),
  "border-left": (
    property: border-left,
    values: (
      null: 1px solid $color-border,
      0: 0,
    )
  ),
  "width": (
    property: width,
    class: w,
    values: (
      1: 1%,
      100: 100%,
      auto: auto
    )
  ),
  // Flex utilities
  "flex": (
    responsive: true,
    property: flex,
    values: (fill: 1 1 auto)
  ),
  "flex-direction": (
    responsive: true,
    property: flex-direction,
    class: flex,
    values: row column
  ),
  "flex-grow": (
    responsive: true,
    property: flex-grow,
    class: flex,
    values: (
      grow-0: 0,
      grow-1: 1,
    )
  ),
  "flex-wrap": (
    responsive: true,
    property: flex-wrap,
    class: flex,
    values: wrap nowrap wrap-reverse
  ),
  "justify-content": (
    responsive: true,
    property: justify-content,
    values: (
      start: flex-start,
      end: flex-end,
      center: center,
      between: space-between,
      around: space-around,
    )
  ),
  "align-items": (
    responsive: true,
    property: align-items,
    values: (
      start: flex-start,
      end: flex-end,
      center: center,
      baseline: baseline,
      stretch: stretch,
    )
  ),
  "align-self": (
    property: align-self,
    class: align-self,
    values: auto flex-start flex-end center baseline stretch
  ),
  "order": (
    responsive: true,
    property: order,
    values: (
      first: -1,
      0: 0,
      1: 1,
      2: 2,
      3: 3,
      4: 4,
      5: 5,
      last: 9,
    ),
  ),
  // Margin utilities
  "margin": (
    responsive: true,
    property: margin,
    class: m,
    values: map-merge($spacers, (auto: auto))
  ),
  "margin-x": (
    responsive: true,
    property: margin-right margin-left,
    class: mx,
    values: map-merge($spacers, (auto: auto))
  ),
  "margin-y": (
    responsive: true,
    property: margin-top margin-bottom,
    class: my,
    values: map-merge($spacers, (auto: auto))
  ),
  "margin-top": (
    responsive: true,
    property: margin-top,
    class: mt,
    values: map-merge($spacers, (auto: auto))
  ),
  "margin-right": (
    responsive: true,
    property: margin-right,
    class: mr,
    values: map-merge($spacers, (auto: auto))
  ),
  "margin-bottom": (
    responsive: true,
    property: margin-bottom,
    class: mb,
    values: map-merge($spacers, (auto: auto))
  ),
  "margin-left": (
    responsive: true,
    property: margin-left,
    class: ml,
    values: map-merge($spacers, (auto: auto))
  ),
  // Negative margin utilities
  "negative-margin": (
    responsive: true,
    property: margin,
    class: m,
    values: $negative-spacers
  ),
  "negative-margin-x": (
    responsive: true,
    property: margin-right margin-left,
    class: mx,
    values: $negative-spacers
  ),
  "negative-margin-y": (
    responsive: true,
    property: margin-top margin-bottom,
    class: my,
    values: $negative-spacers
  ),
  "negative-margin-top": (
    responsive: true,
    property: margin-top,
    class: mt,
    values: $negative-spacers
  ),
  "negative-margin-right": (
    responsive: true,
    property: margin-right,
    class: mr,
    values: $negative-spacers
  ),
  "negative-margin-bottom": (
    responsive: true,
    property: margin-bottom,
    class: mb,
    values: $negative-spacers
  ),
  "negative-margin-left": (
    responsive: true,
    property: margin-left,
    class: ml,
    values: $negative-spacers
  ),
  // Padding utilities
  "padding": (
    responsive: true,
    property: padding,
    class: p,
    values: $spacers
  ),
  "padding-x": (
    responsive: true,
    property: padding-right padding-left,
    class: px,
    values: $spacers
  ),
  "padding-y": (
    responsive: true,
    property: padding-top padding-bottom,
    class: py,
    values: $spacers
  ),
  "padding-top": (
    responsive: true,
    property: padding-top,
    class: pt,
    values: $spacers
  ),
  "padding-right": (
    responsive: true,
    property: padding-right,
    class: pr,
    values: $spacers
  ),
  "padding-bottom": (
    responsive: true,
    property: padding-bottom,
    class: pb,
    values: $spacers
  ),
  "padding-left": (
    responsive: true,
    property: padding-left,
    class: pl,
    values: $spacers
  ),
  //Text utilities
  "font-size": (
      property: font-size,
      class: font,
      values: (
        md: $font-size-base-md,
        lg: $h3-font-size
      )
  ),
  "font-weight": (
    property: font-weight,
    class: font,
    values: (
      normal: $font-weight-normal,
      bold: $font-weight-bold,
      black: $font-weight-black
    )
  ),
  "text-transform": (
    property: text-transform,
    class: text,
    values: uppercase
  ),
  "text-align": (
    responsive: true,
    property: text-align,
    class: text,
    values: left right center
  ),
  "color": (
    property: color,
    class: text,
    values: map-merge(
      $theme-colors,
      (
        "white": $color-white,
        "body": $color-body,
        "muted": $color-muted,
        "reset": inherit,
      )
    )
  ),
  "line-height": (
    property: line-height,
    class: lh,
    values: (
      1: 1,
      base: $line-height-base,
      reset: inherit,
      sm : $line-height-sm,
      md : $line-height-md,
      lg : $line-height-lg,
    )
  ),
  "background-color": (
    property: background-color,
    class: bg,
    values: map-merge(
        $theme-colors,
        (
          "black": $color-black,
          "gray": $color-bg-gray,
          "gray-light": $color-bg-grey-light,
          "transparent": transparent,
          "body": $color-bg
        )
    )
  ),
  "user-select": (
    property: user-select,
    values: all auto none
  ),
  "pointer-events": (
    property: pointer-events,
    values: none auto,
  ),
  //Border utils
  "rounded": (
      property: border-radius,
      class: rounded,
      values: (
        null: $border-radius,
        circle: $border-radius-circle,
        0: 0,
      )
  ),
  "rounded-top": (
    property: border-top-left-radius border-top-right-radius,
    class: rounded-top,
    values: (null: $border-radius)
  ),
  "rounded-right": (
    property: border-top-right-radius border-bottom-right-radius,
    class: rounded-right,
    values: (null: $border-radius)
  ),
  "rounded-bottom": (
    property: border-bottom-right-radius border-bottom-left-radius,
    class: rounded-bottom,
    values: (null: $border-radius)
  ),
  "rounded-left": (
    property: border-bottom-left-radius border-top-left-radius,
    class: rounded-left,
    values: (null: $border-radius)
  ),
  "visibility": (
    property: visibility,
    class: null,
    values: (
            visible: visible,
            invisible: hidden,
    )
  )
);
